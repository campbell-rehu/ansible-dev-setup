- name: "setup development environment"
  hosts: "*"
  gather_facts: true
  vars_files:
    - ../variables/variables.yml
  tasks:
    - name: install apt deps
      become: true
      apt:
        name:
          - ninja-build
          - gettext
          - cmake
          - unzip
          - curl
          - git
          - make
          - python3
          - python3-full
          - vim
          - ripgrep 
        state: present
      when: ansible_facts['distribution'] == "Ubuntu"

    - name: install brew
      script: ../scripts/install-brew.sh
      args:
        creates: "{{ homebrew_dir }}/brew"

    - name: install deps (macos)
      shell:
        cmd: "{{ homebrew_dir }}/brew install ripgrep gettext cmake unzip curl git make python3 vim"
      when: ansible_facts['distribution'] == "MacOSX"

    - name: install build-essential deps for homebrew
      become: true
      apt:
        name:
          - build-essential
      when: ansible_facts['distribution'] == "Ubuntu"

    - name: install pip
      script: ../scripts/install-pip.sh
      args:
        creates: /usr/local/bin/pip

    - name: install homebrew packages
      community.general.homebrew:
        name: fish,neovim,jesseduffield/lazygit/lazygit,zoxide,fzf

    - name: check ~/.bashrc file
      shell:
        cmd: cat {{ home_dir }}/.bashrc
      register: check_bash_rc

    - name: install rust
      script: ../scripts/install-rust.sh
      when: check_bash_rc.stdout.find('cargo') == -1

    - name: get list of groups
      shell:
        cmd: compgen -g
      args:
        executable: /bin/bash
      register: get_groups
      when:
        - ansible_facts['distribution'] == "Ubuntu"

    - name: create chsh group
      shell:
        cmd: |
          groupadd chsh
          usermod -a -G chsh {{ user }}
      when: 
        - ansible_facts['distribution'] == "Ubuntu"
        - get_groups.stdout.find('chsh') == -1

    - name: get chsh pam.d
      shell:
        cmd: cat /etc/pam.d/chsh
      register: get_pamd
      when:
        - ansible_facts['distribution'] == "Ubuntu"

    - name: add chsh group permissions to change shell
      shell:
        cmd: |
          echo "auth       sufficient   pam_wheel.so trust group=chsh" | cat - /etc/pam.d/chsh > /tmp/out && sudo mv /tmp/out /etc/pam.d/chsh -f
      when:
        - ansible_facts['distribution'] == "Ubuntu"
        - get_pamd.stdout.find('group=chsh') == -1 

    - name: check /etc/shells for fish
      shell:
        cmd: cat /etc/shells
      register: get_shells

    - name: set fish as the default shell
      become: true
      shell:
        cmd: |
          echo "{{ homebrew_dir }}/fish" | sudo tee -a /etc/shells
          chsh -s "{{ homebrew_dir }}/fish" {{ user }}
      when: get_shells.stdout.find('fish') == -1

    - name: check if fisher is installed
      stat:
        path: "{{ home_dir }}/.config/fish/fish_plugins"
      register: fisher_plugins

    - name: install fisher
      script: ../scripts/install-fisher.fish
      when: not fisher_plugins.stat.exists

    - name: install fisher plugins
      script: ../scripts/install-fish-plugins.fish

    - name: install node
      script: ../scripts/install-node.sh

    - name: install dotfiles
      script: ../scripts/install-dot-files.sh

    - name: configure tide prompt
      script: ../scripts/configure-tide-prompt.fish

    - name: check if docker is installed
      stat:
        path: /usr/bin/docker
      register: docker
      when:
        - ansible_facts['distribution'] == "Ubuntu"

    - name: check if docker is installed (macos)
      stat:
        path: /usr/local/bin/docker
      register: docker
      when:
        - ansible_facts['distribution'] == "MacOSX"

    - name: install docker
      shell: |
        curl -fsSL https://get.docker.com -o get-docker.sh
        sh get-docker.sh
      when: 
        - ansible_facts['distribution'] == "Ubuntu"
        - not docker.stat.exists

    - name: install docker (macos)
      community.general.homebrew:
        name: homebrew/cask/docker
        state: present
      when: 
        - not docker.stat.exists
        - ansible_facts['distribution'] == "MacOSX"
